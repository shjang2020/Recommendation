Movie Recommender System 실행 순서
=======================

1. Docker Desktop 실행
   - Windows 작업 표시줄의 시스템 트레이에서 Docker Desktop 아이콘 확인
   - 실행되지 않은 경우 Windows 시작 메뉴에서 "Docker Desktop" 검색하여 실행

2. Docker 환경 설정
   a) 프로젝트 구조 확인
      - Dockerfile: FastAPI 애플리케이션 빌드 설정
      - docker-compose.yml: Redis와 FastAPI 서비스 구성
      - requirements.txt: Python 패키지 의존성
      - .dockerignore: Docker 빌드 제외 파일 목록

   b) Docker 이미지 빌드 및 실행
      - 프로젝트 디렉토리에서 다음 명령어 실행:
      docker-compose build --no-cache
      docker-compose up -d

   c) 서비스 상태 확인
      - 실행 중인 컨테이너 확인:
      docker-compose ps
      - 로그 확인:
      docker-compose logs -f

   d) 서비스 중지
      - 모든 서비스 중지:
      docker-compose down
      - 볼륨 포함하여 완전 제거:
      docker-compose down -v

3. 서비스 접속
   - 웹 브라우저에서 http://localhost:8000 접속
   - API 문서는 http://localhost:8000/docs 에서 확인 가능

4. API 엔드포인트
   - POST /recommend: 영화 추천 API
     * genres: 추천에 사용할 장르 리스트 (선택)
     * keywords: 추천에 사용할 키워드 리스트 (선택)
     * num_recommendations: 추천할 영화 수 (기본값: 5, 최대: 20)

주의사항
-------
- Docker Desktop이 반드시 실행 중이어야 합니다.
- Redis 컨테이너는 시스템 레벨에서 실행되며, Python 가상환경과는 독립적입니다.
- 데이터는 'data' 디렉토리에 저장되며, Docker 볼륨으로 마운트됩니다.
- 로그 파일은 'logs' 디렉토리에 저장되며, Docker 볼륨으로 마운트됩니다.
- Redis 데이터는 'redis_data' 볼륨에 저장되어 영구적으로 보존됩니다.
- 장르나 키워드는 최대 10개까지 입력 가능합니다.
- 추천 영화 수는 1에서 20 사이로 설정 가능합니다.

문제 해결
--------
1. 컨테이너 이름 충돌 시:
   - 기존 컨테이너 제거: docker rm -f redis-cache
   - 새 컨테이너 생성: docker-compose up -d

2. 포트 충돌 시:
   - docker-compose.yml 파일에서 포트 매핑 수정
   - 기존 컨테이너 중지 후 재시작

3. 메모리 부족 시:
   - Docker Desktop 설정에서 메모리 할당량 증가
   - 불필요한 컨테이너/이미지 제거

4. 로그 확인:
   - 애플리케이션 로그: docker-compose logs -f app
   - Redis 로그: docker-compose logs -f redis 